 package juego;

import java.awt.Color;



import java.awt.Image;
import javax.swing.ImageIcon;
import entorno.Herramientas;

import entorno.Entorno;

public class Personaje {
	
	private Entorno entorno;
		//clase de crear al gordito del personaje 
	public static class Gondolf{
		private double x;
		private double y;
		private int vida;
		private int magia;
		//private int radio;
		private int anchoPJ =24;
		private int altoPJ = 24;
		private int velocidad;
		//private int angulo;
		
		
		
		
		private Image imagenActual, imagenFrente, imagenDerecha, imagenIzquierda, imagenArriba;

		
		
	public Gondolf( double x ,double y) {
		
		this.x= x;     //aca tenemos la posicion donde se queda el gordito en (x)
		this.y= y;     //lo mismo pero en (Y)
		
		
		
		this.vida=100;
		this.magia=100;
		this.velocidad=10;
		this.imagenArriba = Herramientas.cargarImagen("gondolf_espalda.png");
		this.imagenFrente = Herramientas.cargarImagen("gondolf_frente.png"); //cargo la imagen en los parametros de gondolf
		this.imagenDerecha= Herramientas.cargarImagen("gondolf_Dr.png");
		this.imagenIzquierda= Herramientas.cargarImagen("gondolf_iz.png");
		
		this.imagenActual = imagenFrente; // esta seria la imagen inicial que es la que mira al frente
		
		
		//cargamos las imagenes necesarias del personaje
		
				
			}
	
	
	public void mover(double movX, double movY, Entorno entorno) {
		
		double Dx = 0;
		double Dy = 0;
		
		entorno.ancho();
		//this.x=x+movX * velocidad; //tenemos los valores de X y lo multiplicamos por la velocidad, eso queda 1*10= 10+ posicion(100)= posicion= 110 en x
		//this.y=y+movY * velocidad;
		
		if (entorno.estaPresionada(entorno.TECLA_IZQUIERDA) || entorno.estaPresionada('a')) {
			Dx = -1;
		}
		if (entorno.estaPresionada(entorno.TECLA_DERECHA) || entorno.estaPresionada('d')) {
			Dx = 1;
		}
		if (entorno.estaPresionada(entorno.TECLA_ABAJO) || entorno.estaPresionada('s')) {
			Dy = 1;
		}
		if (entorno.estaPresionada(entorno.TECLA_ARRIBA) || entorno.estaPresionada('w')) {
			Dy = -1;
			// aca tenemos los movimientos WASD del personaje
		}

		if (Dx != 0 && Dy != 0) {
			double magnitud = Math.sqrt(Dx * Dx + Dy * Dy);
			Dx /= magnitud;
			Dy /= magnitud;

		}
		
		
		double nuevoX = x+ Dx * velocidad; //tenemos los valores de X y lo multiplicamos por la velocidad, eso queda 1*10= 10+ posicion(100)= posicion= 110 en x
		double nuevoY = y+ Dy * velocidad;

		if (!colision(nuevoX, nuevoY, entorno)) {
			x= nuevoX;
			y=nuevoY;
		}
		
		
		if(Dx>0) {
			this.imagenActual = imagenDerecha; //cambia la imagen actual (principal) por una en movimiento
		}
		
		if(Dx<0) {    //se mueve a la izquierda
			this.imagenActual =imagenIzquierda;
		}
		
		if(Dy>0) {
			this.imagenActual = imagenFrente;  //gondolf caminando hacia arriba, (da la espalda)
		}
		if(Dy<0) {
			this.imagenActual = imagenArriba; // gondolf caminando hacia nosotros (se le ve la cara)
		}
		
				
		
	
			}
	

	
	//return x <= radio || y <= radio || x >= e.ancho() - radio || y >= e.alto() - radio;	
	
	

	
	
	public void noMover() {
		
		velocidad=0;
	
	}
	
	
	
	
	public boolean colision(double otroX, double otroY, Entorno entorno) {
		
		
	    boolean chocaIzquierda = otroX - (anchoPJ ) < 10;
	    boolean chocaDerecha = otroX + (anchoPJ ) > 590; // evita el panel de la derecha
	    boolean chocaArriba = otroY - (altoPJ ) < 30;
	    boolean chocaAbajo = otroY + (altoPJ) > 570;

	    return chocaIzquierda || chocaDerecha || chocaArriba || chocaAbajo;
	}
	
	
	public void dibujarPj(Entorno entorno) {
		
		
		entorno.dibujarRectangulo(x, y, anchoPJ, altoPJ, 0, Color.getHSBColor(0,0, 1)); //hitbox
		entorno.dibujarImagen(this.imagenActual, this.x, this.y, 0, 5); 
		
		
	}
	
	
	
	
	
	
	public double getX( ) {return x;}
	public double getY () {return y;}
	public int getVida( ) {return vida;}
	public int getMagia() {return magia;}
			
			
			
			}
		
		
		}


